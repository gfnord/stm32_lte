/dts-v1/;
/ {
 soc {
  pinctrl: pin-controller@48000000 {
   usart1_pins_a: usart1_a {
    rx_tx {
     rx = <(1 << 4 | 7) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(1 << 4 | 6) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart1_pins_b: usart1_b {
    rx_tx {
     rx = <(0 << 4 | 10) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 9) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart1_pins_c: usart1_c {
    rx_tx {
     rx = <(6 << 4 | 10) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(1 << 4 | 6) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_a: usart2_a {
    rx_tx {
     rx = <(0 << 4 | 3) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 2) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_b: usart2_b {
    rx_tx {
     rx = <(0 << 4 | 15) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 2) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_c: usart2_c {
    rx_tx {
     rx = <(3 << 4 | 6) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 2) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_d: usart2_d {
    rx_tx {
     rx = <(3 << 4 | 6) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(3 << 4 | 5) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart3_pins_a: usart3_a {
    rx_tx {
     rx = <(1 << 4 | 11) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(1 << 4 | 10) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart4_pins_a: uart4_a {
    rx_tx {
     rx = <(0 << 4 | 1) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 0) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   lpuart1_pins_a: lpuart1_a {
    rx_tx {
     rx = <(6 << 4 | 8) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(6 << 4 | 7) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   can_pins_a: can_a {
    rx_tx {
     rx = <(0 << 4 | 11) ((9 | (0x2<<4)) | (0x1<<9))>;
     tx = <(0 << 4 | 12) ((9 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
  };
 };
};
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;
  nvic: interrupt-controller@e000e100 {
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };
  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
   status = "disabled";
  };
 };
};
/ {
 cpus {
  #address-cells = <1>;
  #size-cells = <0>;
  cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m4f";
   reg = <0>;
  };
 };
 sram0: memory@20000000 {
  device_type = "memory";
  compatible = "mmio-sram";
 };
 soc {
  flash-controller@40022000 {
   compatible = "st,stm32l4-flash-controller";
   label = "FLASH_CTRL";
   reg = <0x40022000 0x400>;
   interrupts = <4 0>;
   #address-cells = <1>;
   #size-cells = <1>;
   flash0: flash@8000000 {
    compatible = "soc-nv-flash";
    label = "FLASH_STM32";
    write-block-size = <8>;
    erase-block-size = <2048>;
   };
  };
  rcc: rcc@40021000 {
   compatible = "st,stm32-rcc";
   clocks-controller;
   #clock-cells = <2>;
   reg = <0x40021000 0x400>;
   label = "STM32_CLK_RCC";
  };
  pinctrl: pin-controller@48000000 {
   compatible = "st,stm32-pinmux";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x48000000 0x2000>;
   gpioa: gpio@48000000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000000 0x400>;
    clocks = <&rcc 1 0x00000001>;
    label = "GPIOA";
   };
   gpiob: gpio@48000400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000400 0x400>;
    clocks = <&rcc 1 0x00000002>;
    label = "GPIOB";
   };
   gpioc: gpio@48000800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000800 0x400>;
    clocks = <&rcc 1 0x00000004>;
    label = "GPIOC";
   };
   gpioh: gpio@48001c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001c00 0x400>;
    clocks = <&rcc 1 0x00000080>;
    label = "GPIOH";
   };
  };
  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc 3 0x00004000>;
   interrupts = <37 0>;
   status = "disabled";
   label = "UART_1";
  };
  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 2 0x00020000>;
   interrupts = <38 0>;
   status = "disabled";
   label = "UART_2";
  };
  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc 2 0x00040000>;
   interrupts = <39 0>;
   status = "disabled";
   label = "UART_3";
  };
  lpuart1: serial@40008000 {
   compatible = "st,stm32-lpuart", "st,stm32-uart";
   reg = <0x40008000 0x400>;
   clocks = <&rcc 4 0x00000001>;
   interrupts = <70 0>;
   status = "disabled";
   label = "LPUART_1";
  };
  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 2 0x00200000>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label= "I2C_1";
  };
  i2c3: i2c@40005c00 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005c00 0x400>;
   clocks = <&rcc 2 0x00800000>;
   interrupts = <72 0>, <73 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label= "I2C_3";
  };
  spi1: spi@40013000 {
   compatible = "st,stm32-spi-fifo";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   interrupts = <35 5>;
   clocks = <&rcc 3 0x00001000>;
   status = "disabled";
   label = "SPI_1";
  };
  spi2: spi@40003800 {
   compatible = "st,stm32-spi-fifo";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 2 0x00004000>;
   interrupts = <36 5>;
   status = "disabled";
   label = "SPI_2";
  };
  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc 3 0x00000800>;
   status = "disabled";
   label = "TIMERS_1";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_1";
    #pwm-cells = <2>;
   };
  };
  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 2 0x00000001>;
   status = "disabled";
   label = "TIMERS_2";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <0>;
    label = "PWM_2";
    #pwm-cells = <2>;
   };
  };
  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 2 0x00000010>;
   status = "disabled";
   label = "TIMERS_6";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_6";
    #pwm-cells = <2>;
   };
  };
  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc 2 0x00000020>;
   status = "disabled";
   label = "TIMERS_7";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_7";
    #pwm-cells = <2>;
   };
  };
  timers15: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 3 0x00010000>;
   status = "disabled";
   label = "TIMERS_15";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_15";
    #pwm-cells = <2>;
   };
  };
  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 3 0x00020000>;
   status = "disabled";
   label = "TIMERS_16";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_16";
    #pwm-cells = <2>;
   };
  };
  can1: can@40006400 {
   compatible = "st,stm32-can";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40006400 0x400>;
   interrupts = <19 0>, <20 0>, <21 0>, <22 0>;
   interrupt-names = "TX", "RX0", "RX1", "SCE";
   clocks = <&rcc 2 0x02000000>;
   status = "disabled";
   label = "CAN_1";
   bus-speed = <250000>;
   sjw = <1>;
   prop_seg_phase_seg1 = <5>;
   phase_seg2 = <6>;
  };
  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   interrupts = <41 0>;
   prescaler = <32768>;
   status = "disabled";
   label = "RTC_0";
  };
 };
};
&nvic {
 arm,num-irq-priority-bits = <4>;
};
/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((640) * 1024)>;
 };
 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    erase-block-size = <4096>;
   };
  };
  pinctrl: pin-controller@48000000 {
   gpiod: gpio@48000c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000c00 0x400>;
    clocks = <&rcc 1 0x00000008>;
    label = "GPIOD";
   };
   gpioe: gpio@48001000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001000 0x400>;
    clocks = <&rcc 1 0x00000010>;
    label = "GPIOE";
   };
   gpiof: gpio@48001400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001400 0x400>;
    clocks = <&rcc 1 0x00000020>;
    label = "GPIOF";
   };
   gpiog: gpio@48001800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001800 0x400>;
    clocks = <&rcc 1 0x00000040>;
    label = "GPIOG";
   };
  };
  uart4: serial@40004c00 {
   compatible = "st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc 2 0x00080000>;
   interrupts = <52 0>;
   status = "disabled";
   label = "UART_4";
  };
  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 2 0x00100000>;
   interrupts = <53 0>;
   status = "disabled";
   label = "UART_5";
  };
  i2c4: i2c@40008400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40008400 0x400>;
   clocks = <&rcc 4 0x00000002>;
   interrupts = <83 0>, <84 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label= "I2C_4";
  };
  spi3: spi@40003c00 {
   compatible = "st,stm32-spi-fifo";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   interrupts = <51 5>;
   status = "disabled";
   label = "SPI_3";
  };
  otgfs_phy: otgfs_phy {
   compatible = "usb-nop-xceiv";
   #phy-cells = <0>;
   label = "OTGFS_PHY";
  };
  usbotg_fs: otgfs@50000000 {
   compatible = "st,stm32-otgfs";
   reg = <0x50000000 0x40000>;
   interrupts = <67 0>;
   interrupt-names = "otgfs";
   num-bidir-endpoints = <6>;
   ram-size = <1280>;
   maximum-speed = "full-speed";
   phys = <&otgfs_phy>;
   status = "disabled";
   label= "OTGFS";
  };
 };
};
/ {
 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((2048) * 1024)>;
   };
  };
 };
};
/ {
 model = "STMicroelectronics STM32L4R5ZI-NUCLEO board";
 compatible = "st,stm32l4r5zi-nucleo", "st,stm32l4r5";
 chosen {
  zephyr,console = &usart2;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };
 leds {
  compatible = "gpio-leds";
  green_led_0: led_0 {
   gpios = <&gpioc 7 (1 << 2)>;
   label = "User LD1";
  };
  blue_led_0: led_1 {
   gpios = <&gpiob 7 (1 << 2)>;
   label = "User LD2";
  };
  red_led_0: led_2 {
   gpios = <&gpiob 14 (1 << 2)>;
   label = "User LD3";
  };
 };
 gpio_keys {
  compatible = "gpio-keys";
  user_button: button {
   label = "User";
   gpios = <&gpioc 13 (0 << 2)>;
  };
 };
 aliases {
  led0 = &green_led_0;
  led1 = &blue_led_0;
  led2 = &red_led_0;
  sw0 = &user_button;
 };
};
arduino_i2c: &i2c1 {};
arduino_spi: &spi1 {};
arduino_serial: &usart3 {};
&usart1 {
 current-speed = <115200>;
 pinctrl-0 = <&usart1_pins_b>;
 pinctrl-names = "default";
 status = "ok";
};
&usart2 {
 current-speed = <115200>;
 pinctrl-0 = <&usart2_pins_a>;
 pinctrl-names = "default";
 status = "ok";
};
&usart3 {
 current-speed = <115200>;
 pinctrl-names = "default";
 status = "ok";
};
&i2c1 {
 status = "ok";
};
&spi1 {
 status = "ok";
};
&usbotg_fs {
 status = "ok";
};
&timers2 {
 status = "ok";
 pwm {
  status = "ok";
 };
};
&rtc {
 status = "ok";
};
&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;
  storage_partition: partition@1FB000 {
   label = "storage";
   reg = <0x001FB000 0x00004000>;
  };
 };
};
